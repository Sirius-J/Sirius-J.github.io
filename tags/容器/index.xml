<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>容器 on 狄俊&#39;s blog</title>
    <link>https://dijun.cf/tags/%E5%AE%B9%E5%99%A8/</link>
    <description>Recent content in 容器 on 狄俊&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 07 Apr 2018 13:00:57 +0000</lastBuildDate><atom:link href="https://dijun.cf/tags/%E5%AE%B9%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java容器源码分析之HashMap与HashSet</title>
      <link>https://dijun.cf/java%E5%AE%B9%E5%99%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bhashmap%E4%B8%8Ehashset/</link>
      <pubDate>Sat, 07 Apr 2018 13:00:57 +0000</pubDate>
      
      <guid>https://dijun.cf/java%E5%AE%B9%E5%99%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bhashmap%E4%B8%8Ehashset/</guid>
      <description>&lt;h1 id=&#34;hashmap与hashset介绍&#34;&gt;HashMap与HashSet介绍&lt;/h1&gt;
&lt;p&gt;HashMap是Java为我们提供的一个存放键值对的容器，通过键的hash值定位存储位置，具有很快的访问速度。但是其遍历顺序是不确定的，这里所说的不确定是指其遍历的顺序与放入顺序不一致、多次遍历输出顺序不一致(可能会放进数据导致reHash，改变原有顺序)。HashMap允许有一个null的键，对于值没做要求。HashMap也是个非线程安全的容器，在并发环境下可以使用ynchronizedMap方法使HashMap具有线程安全的能力，或者使用ConcurrentHashMap。&lt;/p&gt;
&lt;p&gt;HashSet是Java为我们提供的一个集合类容器，他不允许容器内元素重复，底层采用HashMap实现(适配器模式)。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java容器源码分析之LinkedList</title>
      <link>https://dijun.cf/java%E5%AE%B9%E5%99%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Blinkedlist/</link>
      <pubDate>Wed, 28 Mar 2018 10:07:33 +0000</pubDate>
      
      <guid>https://dijun.cf/java%E5%AE%B9%E5%99%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Blinkedlist/</guid>
      <description>&lt;h1 id=&#34;linkedlist简介&#34;&gt;LinkedList简介&lt;/h1&gt;
&lt;p&gt;LinkedList是一个使用双向链表结构实现的容器，与ArrayList一样，它能动态扩充其长度，LinkedList相较于ArrayList，其任意位置插入速度比ArrayList要快，但是其查询速度要比ArrayList要慢；LinkedList继承自AbstractSequentialList，实现了List、Deque、Cloneable、Serializable接口。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java容器源码分析之ArrayList</title>
      <link>https://dijun.cf/java%E5%AE%B9%E5%99%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Barraylist/</link>
      <pubDate>Tue, 27 Mar 2018 16:28:47 +0000</pubDate>
      
      <guid>https://dijun.cf/java%E5%AE%B9%E5%99%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Barraylist/</guid>
      <description>&lt;h1 id=&#34;arraylist简介&#34;&gt;ArrayList简介&lt;/h1&gt;
&lt;p&gt;ArrayList是一个使用数组实现的容器，与普通的数组相比，它能动态的扩容，ArrayList继承自AbstractList，实现了List、RandomAccess、Cloneable、Serializable接口。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
